- name: Install PostgreSQL on all servers
  hosts: all
  become: yes
  tasks:
    - name: Install PostgreSQL
      apt:
        name: postgresql
        state: latest

    - name: Get installed PostgreSQL version
      shell: "pg_lsclusters | awk 'NR==2 {print $1}'"
      register: pg_version
      changed_when: false


- name: Configure Master
  hosts: master
  become: yes
  tasks:
    - name: Configure postgresql.conf for replication
      lineinfile:
        path: /etc/postgresql/{{ pg_version.stdout }}/main/postgresql.conf
        line: "{{item}}"
        insertafter: EOF
      loop:
        - "listen_addresses = '*'"
        - "wal_level = replica"
        - "max_wal_senders = 4"
        - "hot_standby = on"

    - name: Allow replication user in pg_hba.conf
      lineinfile:
        path: /etc/postgresql/{{ pg_version.stdout }}/main/pg_hba.conf
        line: "host replication rep_user 192.168.56.0/24 md5"
        state: present

    - name: Create replication user if not exists
      become: yes
      become_user: postgres
      shell: |
        psql -tAc "SELECT 1 FROM pg_roles WHERE rolname='rep_user'" | grep -q 1 || psql -c "CREATE ROLE rep_user REPLICATION LOGIN PASSWORD '123';"
      args:
        executable: /bin/bash

    - name: Restart PostgreSQL
      systemd:
        name: postgresql
        state: restarted


- name: Configure PostgreSQL Slaves
  hosts: slaves
  become: yes
  tasks:
    - name: Stop PostgreSQL
      systemd:
        name: postgresql
        state: stopped
      ignore_errors: yes

    - name: Clear existing PostgreSQL data directory
      file:
        path: /var/lib/postgresql/{{ pg_version.stdout }}/main
        state: absent
      become_user: postgres

    - name: Create empty PostgreSQL data directory
      file:
        path: /var/lib/postgresql/{{ pg_version.stdout }}/main
        state: directory
        owner: postgres
        group: postgres
        mode: '0700'
      become_user: postgres

    - name: Clone data from master
      shell: >
        PGPASSWORD=123 pg_basebackup -h 192.168.56.10 -D /var/lib/postgresql/{{ pg_version.stdout }}/main 
        -U rep_user -P -v -R -X stream
      become_user: postgres
      register: basebackup_result
      failed_when: basebackup_result.rc != 0

    - name: Start PostgreSQL cluster
      systemd:
        name: postgresql
        state: started
